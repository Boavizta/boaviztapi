import pytest
from httpx import AsyncClient

from boaviztapi.main import app

pytest_plugins = ('pytest_asyncio',)


@pytest.mark.asyncio
async def test_complete_cpu():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=false', json={"core_units": 12, "die_size_per_core": 0.245})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.02,
                                                  'min': 0.02,
                                                  'significant_figures': 2,
                                                  'value': 0.02},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.00424,
                                          'min': 2.41e-09,
                                          'significant_figures': 3,
                                          'value': 0.000102}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 15.9,
                                                  'min': 15.9,
                                                  'significant_figures': 3,
                                                  'value': 15.9},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 14000.0,
                                          'min': 0.0042,
                                          'significant_figures': 2,
                                          'value': 610.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 247.0,
                                                 'min': 247.0,
                                                 'significant_figures': 3,
                                                 'value': 247.0},
                                 'unit': 'MJ',
                                 'use': {'max': 7473000.0,
                                         'min': 0.002369,
                                         'significant_figures': 4,
                                         'value': 20550.0}}}

@pytest.mark.asyncio
async def test_complete_cpu_verbose():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=true', json={"core_units": 12, "die_size_per_core": 0.245})

    assert res.json() == {'impacts': {'adp': {'description': 'Use of minerals and fossil ressources',
                                              'manufacture': {'max': 0.02,
                                                              'min': 0.02,
                                                              'significant_figures': 2,
                                                              'value': 0.02},
                                              'unit': 'kgSbeq',
                                              'use': {'max': 0.00424,
                                                      'min': 2.41e-09,
                                                      'significant_figures': 3,
                                                      'value': 0.000102}},
                                      'gwp': {'description': 'Effects on global warming',
                                              'manufacture': {'max': 15.9,
                                                              'min': 15.9,
                                                              'significant_figures': 3,
                                                              'value': 15.9},
                                              'unit': 'kgCO2eq',
                                              'use': {'max': 14000.0,
                                                      'min': 0.0042,
                                                      'significant_figures': 2,
                                                      'value': 610.0}},
                                      'pe': {'description': 'Consumption of primary energy',
                                             'manufacture': {'max': 247.0,
                                                             'min': 247.0,
                                                             'significant_figures': 3,
                                                             'value': 247.0},
                                             'unit': 'MJ',
                                             'use': {'max': 7473000.0,
                                                     'min': 0.002369,
                                                     'significant_figures': 4,
                                                     'value': 20550.0}}},
                          'verbose': {'USAGE': {'adp_factor': {'max': 2.656e-07,
                                                               'min': 1.32e-08,
                                                               'source': 'ADEME BASE IMPACT',
                                                               'status': 'DEFAULT',
                                                               'unit': 'KgSbeq/kWh',
                                                               'value': 6.42e-08},
                                                'gwp_factor': {'max': 0.9,
                                                               'min': 0.023,
                                                               'source': 'https://www.sciencedirect.com/science/article/pii/S0306261921012149 '
                                                                         ': \n'
                                                                         'Average of 27 european '
                                                                         'countries',
                                                               'status': 'DEFAULT',
                                                               'unit': 'kgCO2e/kWh',
                                                               'value': 0.38},
                                                'hours_electrical_consumption': {'max': 182.23,
                                                                                 'min': 182.23,
                                                                                 'status': 'COMPLETED',
                                                                                 'unit': 'W',
                                                                                 'value': 182.23},
                                                'params': {'max': {'a': 171.2,
                                                                   'b': 0.0354,
                                                                   'c': 36.89,
                                                                   'd': -10.13},
                                                           'min': {'a': 171.2,
                                                                   'b': 0.0354,
                                                                   'c': 36.89,
                                                                   'd': -10.13},
                                                           'status': 'DEFAULT',
                                                           'value': {'a': 171.2,
                                                                     'b': 0.0354,
                                                                     'c': 36.89,
                                                                     'd': -10.13}},
                                                'pe_factor': {'max': 468.15,
                                                              'min': 0.013,
                                                              'source': 'ADPf / (1-%renewable_energy)',
                                                              'status': 'DEFAULT',
                                                              'unit': 'MJ/kWh',
                                                              'value': 12.874},
                                                'time_workload': {'max': 100,
                                                                  'status': 'DEFAULT',
                                                                  'unit': '%',
                                                                  'value': 50},
                                                'usage_location': {'status': 'DEFAULT',
                                                                   'unit': 'CodSP3 - NCS Country Codes '
                                                                           '- NATO',
                                                                   'value': 'EEE'},
                                                'use': {'adp': {'description': 'Use of minerals and '
                                                                               'fossil ressources',
                                                                'max': 0.00424,
                                                                'min': 2.41e-09,
                                                                'significant_figures': 3,
                                                                'unit': 'kgSbeq',
                                                                'value': 0.000102},
                                                        'gwp': {'description': 'Effects on global '
                                                                               'warming',
                                                                'max': 14000.0,
                                                                'min': 0.0042,
                                                                'significant_figures': 2,
                                                                'unit': 'kgCO2eq',
                                                                'value': 610.0},
                                                        'pe': {'description': 'Consumption of primary '
                                                                              'energy',
                                                               'max': 7473000.0,
                                                               'min': 0.002369,
                                                               'significant_figures': 4,
                                                               'unit': 'MJ',
                                                               'value': 20550.0}},
                                                'use_time': {'max': 87600,
                                                             'min': 1,
                                                             'status': 'DEFAULT',
                                                             'unit': 'hours',
                                                             'value': 8760}},
                                      'core_units': {'status': 'INPUT', 'value': 12},
                                      'die_size_per_core': {'status': 'INPUT',
                                                            'unit': 'mm2',
                                                            'value': 0.245},
                                      'manufacture': {'adp': {'description': 'Use of minerals and '
                                                                             'fossil ressources',
                                                              'max': 0.02,
                                                              'min': 0.02,
                                                              'significant_figures': 2,
                                                              'unit': 'kgSbeq',
                                                              'value': 0.02},
                                                      'gwp': {'description': 'Effects on global warming',
                                                              'max': 15.9,
                                                              'min': 15.9,
                                                              'significant_figures': 3,
                                                              'unit': 'kgCO2eq',
                                                              'value': 15.9},
                                                      'pe': {'description': 'Consumption of primary '
                                                                            'energy',
                                                             'max': 247.0,
                                                             'min': 247.0,
                                                             'significant_figures': 3,
                                                             'unit': 'MJ',
                                                             'value': 247.0}},
                                      'units': {'max': 1, 'min': 1, 'status': 'DEFAULT', 'value': 1}}}


@pytest.mark.asyncio
async def test_complete_cpu_with_low_precision():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=false', json={"core_units": 12, "die_size_per_core": 0.2})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.02,
                                                  'min': 0.02,
                                                  'significant_figures': 1,
                                                  'value': 0.02},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.00424,
                                          'min': 2.41e-09,
                                          'significant_figures': 3,
                                          'value': 0.000102}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 10.0,
                                                  'min': 10.0,
                                                  'significant_figures': 1,
                                                  'value': 10.0},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 14000.0,
                                          'min': 0.0042,
                                          'significant_figures': 2,
                                          'value': 610.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 200.0,
                                                 'min': 200.0,
                                                 'significant_figures': 1,
                                                 'value': 200.0},
                                 'unit': 'MJ',
                                 'use': {'max': 7473000.0,
                                         'min': 0.002369,
                                         'significant_figures': 4,
                                         'value': 20550.0}}}


@pytest.mark.asyncio
async def test_empty_cpu():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=false', json={})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.02,
                                                  'min': 0.02,
                                                  'significant_figures': 2,
                                                  'value': 0.02},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.00424,
                                          'min': 2.41e-09,
                                          'significant_figures': 3,
                                          'value': 0.000102}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 22.7,
                                                  'min': 11.1,
                                                  'significant_figures': 3,
                                                  'value': 21.7},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 14000.0,
                                          'min': 0.0042,
                                          'significant_figures': 2,
                                          'value': 610.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 339.0,
                                                 'min': 182.0,
                                                 'significant_figures': 3,
                                                 'value': 325.0},
                                 'unit': 'MJ',
                                 'use': {'max': 7473000.0,
                                         'min': 0.002369,
                                         'significant_figures': 4,
                                         'value': 20550.0}}}


@pytest.mark.asyncio
async def test_multiple_cpu():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=false', json={
            "units": 3, "core_units": 12, "die_size_per_core": 0.245})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.061,
                                                  'min': 0.061,
                                                  'significant_figures': 2,
                                                  'value': 0.061},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.0127,
                                          'min': 7.22e-09,
                                          'significant_figures': 3,
                                          'value': 0.000307}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 47.7,
                                                  'min': 47.7,
                                                  'significant_figures': 3,
                                                  'value': 47.7},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 43000.0,
                                          'min': 0.013,
                                          'significant_figures': 2,
                                          'value': 1800.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 741.0,
                                                 'min': 741.0,
                                                 'significant_figures': 3,
                                                 'value': 741.0},
                                 'unit': 'MJ',
                                 'use': {'max': 22420000.0,
                                         'min': 0.007107,
                                         'significant_figures': 4,
                                         'value': 61650.0}}}


@pytest.mark.asyncio
async def test_incomplete_cpu_verbose():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=true', json={
            "core_units": 24, "family": "Skylake", "manufacture_date": 2017})

    assert res.json() == {'impacts': {'adp': {'description': 'Use of minerals and fossil ressources',
                                              'manufacture': {'max': 0.02,
                                                              'min': 0.02,
                                                              'significant_figures': 2,
                                                              'value': 0.02},
                                              'unit': 'kgSbeq',
                                              'use': {'max': 0.00424,
                                                      'min': 2.41e-09,
                                                      'significant_figures': 3,
                                                      'value': 0.000102}},
                                      'gwp': {'description': 'Effects on global warming',
                                              'manufacture': {'max': 23.0,
                                                              'min': 22.0,
                                                              'significant_figures': 2,
                                                              'value': 22.0},
                                              'unit': 'kgCO2eq',
                                              'use': {'max': 14000.0,
                                                      'min': 0.0042,
                                                      'significant_figures': 2,
                                                      'value': 610.0}},
                                      'pe': {'description': 'Consumption of primary energy',
                                             'manufacture': {'max': 340.0,
                                                             'min': 330.0,
                                                             'significant_figures': 2,
                                                             'value': 330.0},
                                             'unit': 'MJ',
                                             'use': {'max': 7473000.0,
                                                     'min': 0.002369,
                                                     'significant_figures': 4,
                                                     'value': 20550.0}}},
                          'verbose': {'USAGE': {'adp_factor': {'max': 2.656e-07,
                                                               'min': 1.32e-08,
                                                               'source': 'ADEME BASE IMPACT',
                                                               'status': 'DEFAULT',
                                                               'unit': 'KgSbeq/kWh',
                                                               'value': 6.42e-08},
                                                'gwp_factor': {'max': 0.9,
                                                               'min': 0.023,
                                                               'source': 'https://www.sciencedirect.com/science/article/pii/S0306261921012149 '
                                                                         ': \n'
                                                                         'Average of 27 european '
                                                                         'countries',
                                                               'status': 'DEFAULT',
                                                               'unit': 'kgCO2e/kWh',
                                                               'value': 0.38},
                                                'hours_electrical_consumption': {'max': 182.23,
                                                                                 'min': 182.23,
                                                                                 'status': 'COMPLETED',
                                                                                 'unit': 'W',
                                                                                 'value': 182.23},
                                                'params': {'max': {'a': 171.2,
                                                                   'b': 0.0354,
                                                                   'c': 36.89,
                                                                   'd': -10.13},
                                                           'min': {'a': 171.2,
                                                                   'b': 0.0354,
                                                                   'c': 36.89,
                                                                   'd': -10.13},
                                                           'status': 'DEFAULT',
                                                           'value': {'a': 171.2,
                                                                     'b': 0.0354,
                                                                     'c': 36.89,
                                                                     'd': -10.13}},
                                                'pe_factor': {'max': 468.15,
                                                              'min': 0.013,
                                                              'source': 'ADPf / (1-%renewable_energy)',
                                                              'status': 'DEFAULT',
                                                              'unit': 'MJ/kWh',
                                                              'value': 12.874},
                                                'time_workload': {'max': 100,
                                                                  'status': 'DEFAULT',
                                                                  'unit': '%',
                                                                  'value': 50},
                                                'usage_location': {'status': 'DEFAULT',
                                                                   'unit': 'CodSP3 - NCS Country Codes '
                                                                           '- NATO',
                                                                   'value': 'EEE'},
                                                'use': {'adp': {'description': 'Use of minerals and '
                                                                               'fossil ressources',
                                                                'max': 0.00424,
                                                                'min': 2.41e-09,
                                                                'significant_figures': 3,
                                                                'unit': 'kgSbeq',
                                                                'value': 0.000102},
                                                        'gwp': {'description': 'Effects on global '
                                                                               'warming',
                                                                'max': 14000.0,
                                                                'min': 0.0042,
                                                                'significant_figures': 2,
                                                                'unit': 'kgCO2eq',
                                                                'value': 610.0},
                                                        'pe': {'description': 'Consumption of primary '
                                                                              'energy',
                                                               'max': 7473000.0,
                                                               'min': 0.002369,
                                                               'significant_figures': 4,
                                                               'unit': 'MJ',
                                                               'value': 20550.0}},
                                                'use_time': {'max': 87600,
                                                             'min': 1,
                                                             'status': 'DEFAULT',
                                                             'unit': 'hours',
                                                             'value': 8760}},
                                      'core_units': {'status': 'INPUT', 'value': 24},
                                      'die_size_per_core': {'max': 0.27,
                                                            'min': 0.25,
                                                            'source': 'https://en.wikichip.org/wiki/intel/microarchitectures/skylake_(server)#Extreme_Core_Count_.28XCC.29',
                                                            'status': 'COMPLETED',
                                                            'unit': 'mm2',
                                                            'value': 0.25},
                                      'family': {'status': 'CHANGED', 'value': 'skylake'},
                                      'manufacture': {'adp': {'description': 'Use of minerals and '
                                                                             'fossil ressources',
                                                              'max': 0.02,
                                                              'min': 0.02,
                                                              'significant_figures': 2,
                                                              'unit': 'kgSbeq',
                                                              'value': 0.02},
                                                      'gwp': {'description': 'Effects on global warming',
                                                              'max': 23.0,
                                                              'min': 22.0,
                                                              'significant_figures': 2,
                                                              'unit': 'kgCO2eq',
                                                              'value': 22.0},
                                                      'pe': {'description': 'Consumption of primary '
                                                                            'energy',
                                                             'max': 340.0,
                                                             'min': 330.0,
                                                             'significant_figures': 2,
                                                             'unit': 'MJ',
                                                             'value': 330.0}},
                                      'units': {'max': 1, 'min': 1, 'status': 'DEFAULT', 'value': 1}}}


@pytest.mark.asyncio
async def test_incomplete_cpu_verbose_2():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/cpu?verbose=true', json={
            "core_units": 24, "family": "skylak", "manufacture_date": 2017})

    assert res.json() =={'impacts': {'adp': {'description': 'Use of minerals and fossil ressources',
                                             'manufacture': {'max': 0.02,
                                                             'min': 0.02,
                                                             'significant_figures': 2,
                                                             'value': 0.02},
                                             'unit': 'kgSbeq',
                                             'use': {'max': 0.00424,
                                                     'min': 2.41e-09,
                                                     'significant_figures': 3,
                                                     'value': 0.000102}},
                                     'gwp': {'description': 'Effects on global warming',
                                             'manufacture': {'max': 23.0,
                                                             'min': 22.0,
                                                             'significant_figures': 2,
                                                             'value': 22.0},
                                             'unit': 'kgCO2eq',
                                             'use': {'max': 14000.0,
                                                     'min': 0.0042,
                                                     'significant_figures': 2,
                                                     'value': 610.0}},
                                     'pe': {'description': 'Consumption of primary energy',
                                            'manufacture': {'max': 340.0,
                                                            'min': 330.0,
                                                            'significant_figures': 2,
                                                            'value': 330.0},
                                            'unit': 'MJ',
                                            'use': {'max': 7473000.0,
                                                    'min': 0.002369,
                                                    'significant_figures': 4,
                                                    'value': 20550.0}}},
                         'verbose': {'USAGE': {'adp_factor': {'max': 2.656e-07,
                                                              'min': 1.32e-08,
                                                              'source': 'ADEME BASE IMPACT',
                                                              'status': 'DEFAULT',
                                                              'unit': 'KgSbeq/kWh',
                                                              'value': 6.42e-08},
                                               'gwp_factor': {'max': 0.9,
                                                              'min': 0.023,
                                                              'source': 'https://www.sciencedirect.com/science/article/pii/S0306261921012149 '
                                                                        ': \n'
                                                                        'Average of 27 european '
                                                                        'countries',
                                                              'status': 'DEFAULT',
                                                              'unit': 'kgCO2e/kWh',
                                                              'value': 0.38},
                                               'hours_electrical_consumption': {'max': 182.23,
                                                                                'min': 182.23,
                                                                                'status': 'COMPLETED',
                                                                                'unit': 'W',
                                                                                'value': 182.23},
                                               'params': {'max': {'a': 171.2,
                                                                  'b': 0.0354,
                                                                  'c': 36.89,
                                                                  'd': -10.13},
                                                          'min': {'a': 171.2,
                                                                  'b': 0.0354,
                                                                  'c': 36.89,
                                                                  'd': -10.13},
                                                          'status': 'DEFAULT',
                                                          'value': {'a': 171.2,
                                                                    'b': 0.0354,
                                                                    'c': 36.89,
                                                                    'd': -10.13}},
                                               'pe_factor': {'max': 468.15,
                                                             'min': 0.013,
                                                             'source': 'ADPf / (1-%renewable_energy)',
                                                             'status': 'DEFAULT',
                                                             'unit': 'MJ/kWh',
                                                             'value': 12.874},
                                               'time_workload': {'max': 100,
                                                                 'status': 'DEFAULT',
                                                                 'unit': '%',
                                                                 'value': 50},
                                               'usage_location': {'status': 'DEFAULT',
                                                                  'unit': 'CodSP3 - NCS Country Codes '
                                                                          '- NATO',
                                                                  'value': 'EEE'},
                                               'use': {'adp': {'description': 'Use of minerals and '
                                                                              'fossil ressources',
                                                               'max': 0.00424,
                                                               'min': 2.41e-09,
                                                               'significant_figures': 3,
                                                               'unit': 'kgSbeq',
                                                               'value': 0.000102},
                                                       'gwp': {'description': 'Effects on global '
                                                                              'warming',
                                                               'max': 14000.0,
                                                               'min': 0.0042,
                                                               'significant_figures': 2,
                                                               'unit': 'kgCO2eq',
                                                               'value': 610.0},
                                                       'pe': {'description': 'Consumption of primary '
                                                                             'energy',
                                                              'max': 7473000.0,
                                                              'min': 0.002369,
                                                              'significant_figures': 4,
                                                              'unit': 'MJ',
                                                              'value': 20550.0}},
                                               'use_time': {'max': 87600,
                                                            'min': 1,
                                                            'status': 'DEFAULT',
                                                            'unit': 'hours',
                                                            'value': 8760}},
                                     'core_units': {'status': 'INPUT', 'value': 24},
                                     'die_size_per_core': {'max': 0.27,
                                                           'min': 0.25,
                                                           'source': 'https://en.wikichip.org/wiki/intel/microarchitectures/skylake_(server)#Extreme_Core_Count_.28XCC.29',
                                                           'status': 'COMPLETED',
                                                           'unit': 'mm2',
                                                           'value': 0.25},
                                     'family': {'status': 'CHANGED', 'value': 'skylake'},
                                     'manufacture': {'adp': {'description': 'Use of minerals and '
                                                                            'fossil ressources',
                                                             'max': 0.02,
                                                             'min': 0.02,
                                                             'significant_figures': 2,
                                                             'unit': 'kgSbeq',
                                                             'value': 0.02},
                                                     'gwp': {'description': 'Effects on global warming',
                                                             'max': 23.0,
                                                             'min': 22.0,
                                                             'significant_figures': 2,
                                                             'unit': 'kgCO2eq',
                                                             'value': 22.0},
                                                     'pe': {'description': 'Consumption of primary '
                                                                           'energy',
                                                            'max': 340.0,
                                                            'min': 330.0,
                                                            'significant_figures': 2,
                                                            'unit': 'MJ',
                                                            'value': 330.0}},
                                     'units': {'max': 1, 'min': 1, 'status': 'DEFAULT', 'value': 1}}}


@pytest.mark.asyncio
async def test_complete_ram():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/ram?verbose=false', json={"units": 12, "capacity": 32, "density": 1.79})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.034,
                                                  'min': 0.034,
                                                  'significant_figures': 2,
                                                  'value': 0.034},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.00254,
                                          'min': 1.44e-09,
                                          'significant_figures': 3,
                                          'value': 6.13e-05}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 530.0,
                                                  'min': 530.0,
                                                  'significant_figures': 2,
                                                  'value': 530.0},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 8600.0,
                                          'min': 0.0025,
                                          'significant_figures': 2,
                                          'value': 360.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 6700.0,
                                                 'min': 6700.0,
                                                 'significant_figures': 2,
                                                 'value': 6700.0},
                                 'unit': 'MJ',
                                 'use': {'max': 4472000.0,
                                         'min': 0.001418,
                                         'significant_figures': 4,
                                         'value': 12300.0}}}


@pytest.mark.asyncio
async def test_empty_ram():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/ram?verbose=false', json={})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.008,
                                                  'min': 0.0023,
                                                  'significant_figures': 2,
                                                  'value': 0.0049},
                                  'unit': 'kgSbeq',
                                  'use': {'max': 0.000211,
                                          'min': 1.2e-10,
                                          'significant_figures': 3,
                                          'value': 5.11e-06}},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 230.0,
                                                  'min': 27.0,
                                                  'significant_figures': 2,
                                                  'value': 120.0},
                                  'unit': 'kgCO2eq',
                                  'use': {'max': 720.0,
                                          'min': 0.00021,
                                          'significant_figures': 2,
                                          'value': 30.0}},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 2800.0,
                                                 'min': 350.0,
                                                 'significant_figures': 2,
                                                 'value': 1500.0},
                                 'unit': 'MJ',
                                 'use': {'max': 372700.0,
                                         'min': 0.0001181,
                                         'significant_figures': 4,
                                         'value': 1025.0}}}

@pytest.mark.asyncio
async def test_complete_ssd():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/ssd?verbose=false', json={"capacity": 400, "density": 50.6})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.0011,
                                                  'min': 0.0011,
                                                  'significant_figures': 2,
                                                  'value': 0.0011},
                                  'unit': 'kgSbeq',
                                  'use': 'not implemented'},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 24.0,
                                                  'min': 24.0,
                                                  'significant_figures': 2,
                                                  'value': 24.0},
                                  'unit': 'kgCO2eq',
                                  'use': 'not implemented'},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 293.0,
                                                 'min': 293.0,
                                                 'significant_figures': 3,
                                                 'value': 293.0},
                                 'unit': 'MJ',
                                 'use': 'not implemented'}}


@pytest.mark.asyncio
async def test_empty_ssd():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/ssd?verbose=false', json={})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.32,
                                                  'min': 0.064,
                                                  'significant_figures': 2,
                                                  'value': 0.0019},
                                  'unit': 'kgSbeq',
                                  'use': 'not implemented'},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 11000.0,
                                                  'min': 2200.0,
                                                  'significant_figures': 2,
                                                  'value': 52.0},
                                  'unit': 'kgCO2eq',
                                  'use': 'not implemented'},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 137000.0,
                                                 'min': 27400.0,
                                                 'significant_figures': 3,
                                                 'value': 640.0},
                                 'unit': 'MJ',
                                 'use': 'not implemented'}}


@pytest.mark.asyncio
async def test_empty_blade():
    async with AsyncClient(app=app, base_url="http://test") as ac:
        res = await ac.post('/v1/component/case?verbose=false', json={"case_type": "blade"})

    assert res.json() == {'adp': {'description': 'Use of minerals and fossil ressources',
                                  'manufacture': {'max': 0.000714,
                                                  'min': 0.000714,
                                                  'significant_figures': 3,
                                                  'value': 0.0277},
                                  'unit': 'kgSbeq',
                                  'use': 'not implemented'},
                          'gwp': {'description': 'Effects on global warming',
                                  'manufacture': {'max': 32.8,
                                                  'min': 32.8,
                                                  'significant_figures': 3,
                                                  'value': 85.9},
                                  'unit': 'kgCO2eq',
                                  'use': 'not implemented'},
                          'pe': {'description': 'Consumption of primary energy',
                                 'manufacture': {'max': 462.0,
                                                 'min': 462.0,
                                                 'significant_figures': 3,
                                                 'value': 1230.0},
                                 'unit': 'MJ',
                                 'use': 'not implemented'}}